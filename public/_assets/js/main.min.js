function Timemap(e){"use strict";function t(e){return e.replace(/Y/,n).replace(/y/,n.toString().substr(2,3)).replace(/mm/,a+1).replace(/MM/,a.toString().length>1?a+1:"0"+(a+1)).replace(/M/,d[a]).replace(/m/,d[a].toString().substr(0,3)).replace(/dd/,r).replace(/DD/,r.toString().length>1?r:"0"+r).replace(/d/,s[o].toString().substr(0,3)).replace(/D/,s[o])}var e=e||new Date,a=e.getMonth(),r=e.getDate(),o=e.getDay(),n=e.getFullYear(),d=(e.getTime(),e.getHours(),e.getMinutes(),e.getSeconds(),["January","February","March","April","May","June","July","August","September","October","November","December"]),s=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];return{date:e,format:t}}!function(){for(var e,t=function(){},a=["assert","clear","count","debug","dir","dirxml","error","exception","group","groupCollapsed","groupEnd","info","log","markTimeline","profile","profileEnd","table","time","timeEnd","timeline","timelineEnd","timeStamp","trace","warn"],r=a.length,o=window.console=window.console||{};r--;)e=a[r],o[e]||(o[e]=t)}(),"undefined"!=typeof module&&module.exports&&(module.exports=Timemap);var kickback=function(e){"use strict";function t(e){var t=[];for(var a in e)e.hasOwnProperty(a)&&t.push(encodeURIComponent(a)+"="+encodeURIComponent(e[a]));return t.join("&")}return e={},e.request=function(e){if("string"==typeof e){var a=e;e={},e.url=a,a=null}if(e.url=e.url?e.url:"/",e.data=e.data?e.data:null,e.method=e.method?e.method:"GET",e.headers=e.headers?e.headers:!1,e.cors=e.cors?e.cors:!1,e.async=e.async?e.async:!0,e.serialize=e.serialize?e.serialize:!1,e.auto=e.auto?e.auto:!1,Object.defineProperty(e,"tmp",{configurable:!0,writable:!0}),e.auto===!0)if("undefined"!=typeof window.FormData)if(e.data instanceof HTMLElement)e.data=new FormData(e.data);else{if("object"!=typeof e.data||e.data instanceof Array!=!1)throw new Error("Submit data as object or HTMLElement");e.tmp=e.data,e.data=new FormData,Object.keys(e.tmp).forEach(function(t){e.data.append(t,e.tmp[t])}),delete e.tmp}else e.data instanceof HTMLElement&&(e.tmp={},[].forEach.call(e.data,function(t){e.tmp[t.name]=t.value}),e.data=e.tmp,delete e.tmp),e.serialize=!0;return e.serialize===!0&&(e.data=t(e.data)),console.log(e.data instanceof FormData?"formDATA":"notFormData"),new Promise(function(t,a){var r=new XMLHttpRequest;r.open(e.method,e.url,e.async),r.onload=function(){200==r.status?t(r.response):a(Error("Error: ",r.statusTxt))},r.onerror=function(){a(Error("Network Error"))},e.headers!==!1&&(e.headers.type=e.headers.type||"Content-Type",e.headers.value=e.headers.value||"text/plain;charset=UTF-8",r.setRequestHeader(e.headers.type,e.headers.value)),e.headers===!1&&"post"===e.method.toLowerCase()&&e.serialize===!0&&r.setRequestHeader("Content-Type","application/x-www-form-urlencoded"),r.send("get"===e.method.toLowerCase()?null:e.data)})},e}(kickback);"undefined"!=typeof module&&module.exports&&(module.exports=kickback),function(){console.log("some test")}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRpbWVtYXAuanMiLCJwbHVnaW5zLmpzIiwia2lja2JhY2suanMiLCJtYWluLmpzIl0sIm5hbWVzIjpbIlRpbWVtYXAiLCJkYXRlT2JqIiwiZm9ybWF0Iiwic3RyIiwicmVwbGFjZSIsInllYXIiLCJ0b1N0cmluZyIsInN1YnN0ciIsIm1vbnRoIiwibGVuZ3RoIiwibW9udGhzIiwiZGF5IiwiZGF5cyIsImRheU9mV2VlayIsIkRhdGUiLCJnZXRNb250aCIsImdldERhdGUiLCJnZXREYXkiLCJnZXRGdWxsWWVhciIsImdldFRpbWUiLCJnZXRIb3VycyIsImdldE1pbnV0ZXMiLCJnZXRTZWNvbmRzIiwiZGF0ZSIsIm1ldGhvZCIsIm5vb3AiLCJtZXRob2RzIiwiY29uc29sZSIsIndpbmRvdyIsIm1vZHVsZSIsImV4cG9ydHMiLCJraWNrYmFjayIsIl9zZXJpYWxpemUiLCJvYmoiLCJwIiwiaGFzT3duUHJvcGVydHkiLCJwdXNoIiwiZW5jb2RlVVJJQ29tcG9uZW50Iiwiam9pbiIsInJlcXVlc3QiLCJrYk9wdGlvbnMiLCJ0bXAiLCJ1cmwiLCJkYXRhIiwiaGVhZGVycyIsImNvcnMiLCJhc3luYyIsInNlcmlhbGl6ZSIsImF1dG8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiRm9ybURhdGEiLCJIVE1MRWxlbWVudCIsIkFycmF5IiwiRXJyb3IiLCJrZXlzIiwiZm9yRWFjaCIsImtleSIsImFwcGVuZCIsImNhbGwiLCJlbGVtIiwibmFtZSIsInZhbHVlIiwibG9nIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJ4aHIiLCJYTUxIdHRwUmVxdWVzdCIsIm9wZW4iLCJvbmxvYWQiLCJzdGF0dXMiLCJyZXNwb25zZSIsInN0YXR1c1R4dCIsIm9uZXJyb3IiLCJ0eXBlIiwic2V0UmVxdWVzdEhlYWRlciIsInRvTG93ZXJDYXNlIiwic2VuZCJdLCJtYXBwaW5ncyI6IkFBQUEsUUFBQUEsU0FBQUMsR0FDQSxZ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UUFBQXhDLEVBQUFoQixPQUFBdUQsY0FDQSxLQUVBdkMsRUFBQUcsU0FNQVosR0FFQUEsU0FHQSxvQkFBQUYsU0FBQUEsT0FBQUMsVUFDQUQsT0FBQUMsUUFBQUMsVUMxSEEsV0FDQUosUUFBQXNDLElBQUEiLCJmaWxlIjoibWFpbi5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBUaW1lbWFwKGRhdGVPYmopIHtcbiAgICAndXNlIHN0cmljdCc7XG5cbiAgICB2YXIgZGF0ZU9iaiA9IGRhdGVPYmogfHwgbmV3IERhdGUoKSxcbiAgICBtb250aCA9IGRhdGVPYmouZ2V0TW9udGgoKSwgLy8gY3VzIGphdmFzY3JpcHQgc3RhcnRzIG1vbnRoIGF0IDBcbiAgICBkYXkgPSBkYXRlT2JqLmdldERhdGUoKSxcbiAgICBkYXlPZldlZWsgPSBkYXRlT2JqLmdldERheSgpLFxuICAgIHllYXIgPSBkYXRlT2JqLmdldEZ1bGxZZWFyKCksXG4gICAgdGltZSA9IGRhdGVPYmouZ2V0VGltZSgpLFxuICAgIGhvdXIgPSBkYXRlT2JqLmdldEhvdXJzKCksXG4gICAgbWludXRlcyA9IGRhdGVPYmouZ2V0TWludXRlcygpLFxuICAgIHNlY29uZHMgPSBkYXRlT2JqLmdldFNlY29uZHMoKTtcblxuICAgIHZhciBtb250aHMgPSBbXG4gICAgICAgICdKYW51YXJ5JyxcbiAgICAgICAgJ0ZlYnJ1YXJ5JyxcbiAgICAgICAgJ01hcmNoJyxcbiAgICAgICAgJ0FwcmlsJyxcbiAgICAgICAgJ01heScsXG4gICAgICAgICdKdW5lJyxcbiAgICAgICAgJ0p1bHknLFxuICAgICAgICAnQXVndXN0JyxcbiAgICAgICAgJ1NlcHRlbWJlcicsXG4gICAgICAgICdPY3RvYmVyJyxcbiAgICAgICAgJ05vdmVtYmVyJyxcbiAgICAgICAgJ0RlY2VtYmVyJ1xuICAgIF07XG5cbiAgICB2YXIgZGF5cyA9IFtcbiAgICAgICAgJ1N1bmRheScsXG4gICAgICAgICdNb25kYXknLFxuICAgICAgICAnVHVlc2RheScsXG4gICAgICAgICdXZWRuZXNkYXknLFxuICAgICAgICAnVGh1cnNkYXknLFxuICAgICAgICAnRnJpZGF5JyxcbiAgICAgICAgJ1NhdHVyZGF5J1xuICAgIF07XG5cbiAgICBmdW5jdGlvbiBmb3JtYXQoc3RyKSB7XG4gICAgICAgIHJldHVybiBzdHIucmVwbGFjZSgvWS8sIHllYXIpIC8vIDIwMTVcbiAgICAgICAgLnJlcGxhY2UoL3kvLCB5ZWFyLnRvU3RyaW5nKCkuc3Vic3RyKDIsMykpIC8vMTVcbiAgICAgICAgLnJlcGxhY2UoL21tLywgbW9udGgrMSkgLy81LCA5LCAxMVxuICAgICAgICAucmVwbGFjZSgvTU0vLCAobW9udGgudG9TdHJpbmcoKS5sZW5ndGggPiAxKSA/IG1vbnRoICsgMSA6ICcwJysobW9udGgrMSkpIC8vIDA1LCAwOSwgMTFcbiAgICAgICAgLnJlcGxhY2UoL00vLCBtb250aHNbbW9udGhdKSAvLyBKYW51YXJ5LCBNYXJjaCwgSnVuZVxuICAgICAgICAucmVwbGFjZSgvbS8sIG1vbnRoc1ttb250aF0udG9TdHJpbmcoKS5zdWJzdHIoMCwzKSkgLy8gSmFuLCBNYXIsIEp1blxuICAgICAgICAucmVwbGFjZSgvZGQvLCBkYXkpIC8vIDEsIDUsIDIwLCAyNlxuICAgICAgICAucmVwbGFjZSgvREQvLCAoZGF5LnRvU3RyaW5nKCkubGVuZ3RoID4gMSkgPyBkYXkgOiAnMCcrZGF5KSAvLyAwMSwgMDQsIDE1LCAyMlxuICAgICAgICAucmVwbGFjZSgvZC8sIGRheXNbZGF5T2ZXZWVrXS50b1N0cmluZygpLnN1YnN0cigwLDMpKSAvLyBNb24sIFR1ZVxuICAgICAgICAucmVwbGFjZSgvRC8sIGRheXNbZGF5T2ZXZWVrXSk7IC8vIE1vbmRheSwgVHVlc2RheVxuICAgIH1cbiAgICBcbiAgICByZXR1cm4ge1xuICAgICAgICBkYXRlOiBkYXRlT2JqLFxuICAgICAgICBmb3JtYXQ6IGZvcm1hdFxuICAgIH07XG59O1xuXG5pZih0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyAmJiBtb2R1bGUuZXhwb3J0cykge1xuICAgIG1vZHVsZS5leHBvcnRzID0gVGltZW1hcDtcbn1cbiIsIi8vIEF2b2lkIGBjb25zb2xlYCBlcnJvcnMgaW4gYnJvd3NlcnMgdGhhdCBsYWNrIGEgY29uc29sZS5cbihmdW5jdGlvbigpIHtcbiAgICB2YXIgbWV0aG9kO1xuICAgIHZhciBub29wID0gZnVuY3Rpb24gKCkge307XG4gICAgdmFyIG1ldGhvZHMgPSBbXG4gICAgICAgICdhc3NlcnQnLCAnY2xlYXInLCAnY291bnQnLCAnZGVidWcnLCAnZGlyJywgJ2RpcnhtbCcsICdlcnJvcicsXG4gICAgICAgICdleGNlcHRpb24nLCAnZ3JvdXAnLCAnZ3JvdXBDb2xsYXBzZWQnLCAnZ3JvdXBFbmQnLCAnaW5mbycsICdsb2cnLFxuICAgICAgICAnbWFya1RpbWVsaW5lJywgJ3Byb2ZpbGUnLCAncHJvZmlsZUVuZCcsICd0YWJsZScsICd0aW1lJywgJ3RpbWVFbmQnLFxuICAgICAgICAndGltZWxpbmUnLCAndGltZWxpbmVFbmQnLCAndGltZVN0YW1wJywgJ3RyYWNlJywgJ3dhcm4nXG4gICAgXTtcbiAgICB2YXIgbGVuZ3RoID0gbWV0aG9kcy5sZW5ndGg7XG4gICAgdmFyIGNvbnNvbGUgPSAod2luZG93LmNvbnNvbGUgPSB3aW5kb3cuY29uc29sZSB8fCB7fSk7XG5cbiAgICB3aGlsZSAobGVuZ3RoLS0pIHtcbiAgICAgICAgbWV0aG9kID0gbWV0aG9kc1tsZW5ndGhdO1xuXG4gICAgICAgIC8vIE9ubHkgc3R1YiB1bmRlZmluZWQgbWV0aG9kcy5cbiAgICAgICAgaWYgKCFjb25zb2xlW21ldGhvZF0pIHtcbiAgICAgICAgICAgIGNvbnNvbGVbbWV0aG9kXSA9IG5vb3A7XG4gICAgICAgIH1cbiAgICB9XG59KCkpO1xuIiwidmFyIGtpY2tiYWNrID0gKGZ1bmN0aW9uKGtpY2tiYWNrKSB7XG4gICAgJ3VzZSBzdHJpY3QnO1xuICAgIC8vIG1ha2UgYSBuZXcgb2JqZWN0XG4gICAga2lja2JhY2sgPSB7fTtcblxuICAgIC8vIHByaXZhdGUgbWV0aG9kXG4gICAgZnVuY3Rpb24gX3NlcmlhbGl6ZShvYmopIHtcbiAgICAgICAgdmFyIHN0ciA9IFtdO1xuICAgICAgICBmb3IodmFyIHAgaW4gb2JqKXtcbiAgICAgICAgICAgIGlmIChvYmouaGFzT3duUHJvcGVydHkocCkpIHtcbiAgICAgICAgICAgICAgICBzdHIucHVzaChlbmNvZGVVUklDb21wb25lbnQocCkgKyBcIj1cIiArIGVuY29kZVVSSUNvbXBvbmVudChvYmpbcF0pKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc3RyLmpvaW4oXCImXCIpO1xuICAgIH07XG5cbiAgICAvLyBtYWluIHB1YmxpYyBtZXRob2RcbiAgICBraWNrYmFjay5yZXF1ZXN0ID0gZnVuY3Rpb24oa2JPcHRpb25zKSB7XG4gICAgICAgIC8vIG9wdGlvbnMgY29uZmlndXJhdGlvbiBhbmQgZGVmYXVsdHNcbiAgICAgICAgaWYodHlwZW9mIGtiT3B0aW9ucyA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIC8vIGFzc3VtZSBpdCdzIGEgdXJsIGFuZCB3ZSBhcmUgdXNpbmcgR0VUIFxuICAgICAgICAgICAgdmFyIHRtcCA9IGtiT3B0aW9ucztcbiAgICAgICAgICAgIGtiT3B0aW9ucyA9IHt9O1xuICAgICAgICAgICAga2JPcHRpb25zLnVybCA9IHRtcDtcbiAgICAgICAgICAgIHRtcCA9IG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICBrYk9wdGlvbnMudXJsID0gKGtiT3B0aW9ucy51cmwpID8ga2JPcHRpb25zLnVybCA6ICcvJztcbiAgICAgICAga2JPcHRpb25zLmRhdGEgPSAoa2JPcHRpb25zLmRhdGEpID8ga2JPcHRpb25zLmRhdGEgOiBudWxsO1xuICAgICAgICBrYk9wdGlvbnMubWV0aG9kID0gKGtiT3B0aW9ucy5tZXRob2QpID8ga2JPcHRpb25zLm1ldGhvZCA6ICdHRVQnO1xuICAgICAgICBrYk9wdGlvbnMuaGVhZGVycyA9IChrYk9wdGlvbnMuaGVhZGVycykgPyBrYk9wdGlvbnMuaGVhZGVycyA6IGZhbHNlO1xuICAgICAgICBrYk9wdGlvbnMuY29ycyA9IChrYk9wdGlvbnMuY29ycykgPyBrYk9wdGlvbnMuY29ycyA6IGZhbHNlO1xuICAgICAgICBrYk9wdGlvbnMuYXN5bmMgPSAoa2JPcHRpb25zLmFzeW5jKSA/IGtiT3B0aW9ucy5hc3luYyA6IHRydWU7XG4gICAgICAgIGtiT3B0aW9ucy5zZXJpYWxpemUgPSAoa2JPcHRpb25zLnNlcmlhbGl6ZSkgPyBrYk9wdGlvbnMuc2VyaWFsaXplIDogZmFsc2U7XG4gICAgICAgIGtiT3B0aW9ucy5hdXRvID0gKGtiT3B0aW9ucy5hdXRvKSA/IGtiT3B0aW9ucy5hdXRvIDogZmFsc2U7IFxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoa2JPcHRpb25zLCAndG1wJywge1xuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWVcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYoa2JPcHRpb25zLmF1dG8gPT09IHRydWUpIHtcbiAgICAgICAgICAgIGlmKHR5cGVvZiB3aW5kb3cuRm9ybURhdGEgIT09ICd1bmRlZmluZWQnKSB7IFxuICAgICAgICAgICAgICAgIGlmKGtiT3B0aW9ucy5kYXRhIGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAgICAga2JPcHRpb25zLmRhdGEgPSBuZXcgRm9ybURhdGEoa2JPcHRpb25zLmRhdGEpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIGtiT3B0aW9ucy5kYXRhID09PSAnb2JqZWN0JyAmJiBrYk9wdGlvbnMuZGF0YSBpbnN0YW5jZW9mIEFycmF5ID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgICAgICBrYk9wdGlvbnMudG1wID0ga2JPcHRpb25zLmRhdGE7XG4gICAgICAgICAgICAgICAgICAgIGtiT3B0aW9ucy5kYXRhID0gbmV3IEZvcm1EYXRhKCk7XG4gICAgICAgICAgICAgICAgICAgIE9iamVjdC5rZXlzKGtiT3B0aW9ucy50bXApLmZvckVhY2goZnVuY3Rpb24oa2V5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBrYk9wdGlvbnMuZGF0YS5hcHBlbmQoa2V5LCBrYk9wdGlvbnMudG1wW2tleV0pO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgZGVsZXRlIGtiT3B0aW9ucy50bXA7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdTdWJtaXQgZGF0YSBhcyBvYmplY3Qgb3IgSFRNTEVsZW1lbnQnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmKGtiT3B0aW9ucy5kYXRhIGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAgICAga2JPcHRpb25zLnRtcCA9IHt9O1xuICAgICAgICAgICAgICAgICAgICBbXS5mb3JFYWNoLmNhbGwoa2JPcHRpb25zLmRhdGEsIGZ1bmN0aW9uKGVsZW0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGtiT3B0aW9ucy50bXBbZWxlbS5uYW1lXSA9IGVsZW0udmFsdWU7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBrYk9wdGlvbnMuZGF0YSA9IGtiT3B0aW9ucy50bXA7XG4gICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBrYk9wdGlvbnMudG1wO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBrYk9wdGlvbnMuc2VyaWFsaXplID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmKGtiT3B0aW9ucy5zZXJpYWxpemUgPT09IHRydWUpIHtcbiAgICAgICAgICAgIGtiT3B0aW9ucy5kYXRhID0gX3NlcmlhbGl6ZShrYk9wdGlvbnMuZGF0YSk7XG4gICAgICAgIH1cblxuICAgICAgICBpZihrYk9wdGlvbnMuZGF0YSBpbnN0YW5jZW9mIEZvcm1EYXRhKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnZm9ybURBVEEnKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdub3RGb3JtRGF0YScpO1xuICAgICAgICB9IFxuXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgICAgIHZhciB4aHIgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcbiAgICAgICAgICAgIHhoci5vcGVuKGtiT3B0aW9ucy5tZXRob2QsIGtiT3B0aW9ucy51cmwsIGtiT3B0aW9ucy5hc3luYyk7XG5cbiAgICAgICAgICAgIC8vIGNoZWNrIHN0YXR1c1xuICAgICAgICAgICAgeGhyLm9ubG9hZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIGlmKHhoci5zdGF0dXMgPT0gMjAwKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUoeGhyLnJlc3BvbnNlKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZWplY3QoRXJyb3IoJ0Vycm9yOiAnLCB4aHIuc3RhdHVzVHh0KSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgLy8gbmV0d29yayBlcnJvclxuICAgICAgICAgICAgeGhyLm9uZXJyb3IgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICByZWplY3QoRXJyb3IoJ05ldHdvcmsgRXJyb3InKSk7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAvLyBzZXQgaGVhZGVyc1xuICAgICAgICAgICAgaWYoa2JPcHRpb25zLmhlYWRlcnMgIT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAga2JPcHRpb25zLmhlYWRlcnMudHlwZSA9IGtiT3B0aW9ucy5oZWFkZXJzLnR5cGUgfHwgJ0NvbnRlbnQtVHlwZSc7XG4gICAgICAgICAgICAgICAga2JPcHRpb25zLmhlYWRlcnMudmFsdWUgPSBrYk9wdGlvbnMuaGVhZGVycy52YWx1ZSB8fCAndGV4dC9wbGFpbjtjaGFyc2V0PVVURi04JztcbiAgICAgICAgICAgICAgICB4aHIuc2V0UmVxdWVzdEhlYWRlcihrYk9wdGlvbnMuaGVhZGVycy50eXBlLCBrYk9wdGlvbnMuaGVhZGVycy52YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmKGtiT3B0aW9ucy5oZWFkZXJzID09PSBmYWxzZSAmJiBrYk9wdGlvbnMubWV0aG9kLnRvTG93ZXJDYXNlKCkgPT09ICdwb3N0JyAmJiBrYk9wdGlvbnMuc2VyaWFsaXplID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgeGhyLnNldFJlcXVlc3RIZWFkZXIoJ0NvbnRlbnQtVHlwZScsICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIG1ha2UgdGhlIHJlcXVlc3RcbiAgICAgICAgICAgIGlmKGtiT3B0aW9ucy5tZXRob2QudG9Mb3dlckNhc2UoKSA9PT0gJ2dldCcpIHtcbiAgICAgICAgICAgICAgICB4aHIuc2VuZChudWxsKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgeGhyLnNlbmQoa2JPcHRpb25zLmRhdGEpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9OyAvLyBlbmQgbWFpbiBtZXRob2RcblxuXG4gICAgcmV0dXJuIGtpY2tiYWNrO1xuXG59KGtpY2tiYWNrKSk7XG5cbi8vIHNlZSBpZiB3ZSBhcmUgaW4gbm9kZSBpZiBzbyBzdXBwb3J0IGl0IVxuaWYodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmV4cG9ydHMpIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IGtpY2tiYWNrO1xufVxuIiwiKGZ1bmN0aW9uKCkge1xuY29uc29sZS5sb2coJ3NvbWUgdGVzdCcpO1xufSkoKTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==