function Timemap(e){"use strict";function t(e){return e.replace(/Y/,a).replace(/y/,a.toString().substr(2,3)).replace(/mm/,o+1).replace(/MM/,o.toString().length>1?o+1:"0"+(o+1)).replace(/M/,i[o]).replace(/m/,i[o].toString().substr(0,3)).replace(/dd/,r).replace(/DD/,r.toString().length>1?r:"0"+r).replace(/d/,l[n].toString().substr(0,3)).replace(/D/,l[n])}var e=e||new Date,o=e.getMonth(),r=e.getDate(),n=e.getDay(),a=e.getFullYear(),i=(e.getTime(),e.getHours(),e.getMinutes(),e.getSeconds(),["January","February","March","April","May","June","July","August","September","October","November","December"]),l=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];return{date:e,format:t}}!function(){for(var e=0,t=["webkit","moz"],o=0;o<t.length&&!window.requestAnimationFrame;++o)window.requestAnimationFrame=window[t[o]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[t[o]+"CancelAnimationFrame"]||window[t[o]+"CancelRequestAnimationFrame"];window.requestAnimationFrame||(window.requestAnimationFrame=function(t,o){var r=(new Date).getTime(),n=Math.max(0,16-(r-e)),a=window.setTimeout(function(){t(r+n)},n);return e=r+n,a}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(e){clearTimeout(e)})}(),function(){for(var e,t=function(){},o=["assert","clear","count","debug","dir","dirxml","error","exception","group","groupCollapsed","groupEnd","info","log","markTimeline","profile","profileEnd","table","time","timeEnd","timeline","timelineEnd","timeStamp","trace","warn"],r=o.length,n=window.console=window.console||{};r--;)e=o[r],n[e]||(n[e]=t)}(),"undefined"!=typeof module&&module.exports&&(module.exports=Timemap);var kickback=function(e){"use strict";function t(e){var t=[];for(var o in e)e.hasOwnProperty(o)&&t.push(encodeURIComponent(o)+"="+encodeURIComponent(e[o]));return t.join("&")}return e={},e.request=function(e){if("string"==typeof e){var o=e;e={},e.url=o,o=null}if(e.url=e.url?e.url:"/",e.data=e.data?e.data:null,e.method=e.method?e.method:"GET",e.headers=e.headers?e.headers:!1,e.cors=e.cors?e.cors:!1,e.async=e.async?e.async:!0,e.serialize=e.serialize?e.serialize:!1,e.auto=e.auto?e.auto:!1,Object.defineProperty(e,"tmp",{configurable:!0,writable:!0}),e.auto===!0)if("undefined"!=typeof window.FormData)if(e.data instanceof HTMLElement)e.data=new FormData(e.data);else{if("object"!=typeof e.data||e.data instanceof Array!=!1)throw new Error("Submit data as object or HTMLElement");e.tmp=e.data,e.data=new FormData,Object.keys(e.tmp).forEach(function(t){e.data.append(t,e.tmp[t])}),delete e.tmp}else e.data instanceof HTMLElement&&(e.tmp={},[].forEach.call(e.data,function(t){e.tmp[t.name]=t.value}),e.data=e.tmp,delete e.tmp),e.serialize=!0;return e.serialize===!0&&(e.data=t(e.data)),console.log(e.data instanceof FormData?"formDATA":"notFormData"),new Promise(function(t,o){var r=new XMLHttpRequest;r.open(e.method,e.url,e.async),r.onload=function(){200==r.status?t(r.response):o(Error("Error: ",r.statusTxt))},r.onerror=function(){o(Error("Network Error"))},e.headers!==!1&&(e.headers.type=e.headers.type||"Content-Type",e.headers.value=e.headers.value||"text/plain;charset=UTF-8",r.setRequestHeader(e.headers.type,e.headers.value)),e.headers===!1&&"post"===e.method.toLowerCase()&&e.serialize===!0&&r.setRequestHeader("Content-Type","application/x-www-form-urlencoded"),r.send("get"===e.method.toLowerCase()?null:e.data)})},e}(kickback);"undefined"!=typeof module&&module.exports&&(module.exports=kickback),function(e){"use strict";function t(){i=e.scrollY,console.log("set cache Y",i)}function o(){console.log("scrolling stopped")}function r(t){"string"==typeof t&&(t=document.querySelector(t));var o=t.getBoundingClientRect();return o.top>e.innerHeight||o.bottom<0?(console.log(t,"is NOT in view"),t.classList.contains("in-view")&&t.classList.remove("in-view"),!1):(console.log(t,"is in view"),t.classList.add("in-view"),!0)}var n=null,a=null,i=0,l=(document.querySelector('ul[role="menubar"]'),document.getElementById("main-nav")),s=document.getElementById("masthead"),c=["#about","#work","#projects"],u="#eaeaea",d="#AFB4D8",m="#6F94BE",f="#6EAEB3",p="#66CF97",g="#49DB45",w="#1DE410";e.onscroll=function(y){null!=n&&clearTimeout(n),null!=a&&clearTimeout(a),i<e.scrollY&&l.classList.add("hide-nav"),i>e.scrollY&&l.classList.remove("hide-nav"),n=setTimeout(o,1500),a=setTimeout(t,100),0==e.scrollY&&(s.style.backgroundColor=u),e.scrollY>0&&e.scrollY<=20&&(s.style.backgroundColor=d),e.scrollY>=21&&e.scrollY<=40&&(s.style.backgroundColor=m),e.scrollY>=41&&e.scrollY<=60&&(s.style.backgroundColor=f),e.scrollY>=61&&e.scrollY<=80&&(s.style.backgroundColor=p),e.scrollY>=81&&e.scrollY<=100&&(s.style.backgroundColor=g),e.scrollY>=101&&e.scrollY<=120&&(s.style.backgroundColor=w),e.scrollY>=121&&(s.style.backgroundColor=u),c.forEach(function(e){r(e)})}}(window),function(){"use strict";var e=function(e,t,o){var r,n,a=window.pageYOffset,i=e.offsetTop,l=i-a,s=l/(t/16);o>0&&(i-=o);var c=function(){window.scrollBy(0,s),n=window.pageYOffset,r=requestAnimationFrame(c),s>=0?(n>=i-s||window.innerHeight+n>=document.body.offsetHeight)&&cancelAnimationFrame(r):(i||0)>=n&&cancelAnimationFrame(r)};r=requestAnimationFrame(c)};document.addEventListener("click",function(t){if(t.target&&"A"==t.target.nodeName&&t.target.classList.contains("scroll")){t.preventDefault();var o=t.target.getAttribute("href"),r=document.querySelector(o),n=t.target.getAttribute("data-scroll-speed")?t.target.getAttribute("data-scroll-speed"):500,a=t.target.getAttribute("data-scroll-offset")?t.target.getAttribute("data-scroll-offset"):!1;r&&e(r,n,a)}},!1)}();
//# sourceMappingURL=data:application/json;base64,