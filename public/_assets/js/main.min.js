function Timemap(e){"use strict";function t(e){return e.replace(/Y/,l).replace(/y/,l.toString().substr(2,3)).replace(/mm/,o+1).replace(/MM/,o.toString().length>1?o+1:"0"+(o+1)).replace(/M/,n[o]).replace(/m/,n[o].toString().substr(0,3)).replace(/dd/,r).replace(/DD/,r.toString().length>1?r:"0"+r).replace(/d/,s[a].toString().substr(0,3)).replace(/D/,s[a])}var e=e||new Date,o=e.getMonth(),r=e.getDate(),a=e.getDay(),l=e.getFullYear(),n=(e.getTime(),e.getHours(),e.getMinutes(),e.getSeconds(),["January","February","March","April","May","June","July","August","September","October","November","December"]),s=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];return{date:e,format:t}}!function(){for(var e,t=function(){},o=["assert","clear","count","debug","dir","dirxml","error","exception","group","groupCollapsed","groupEnd","info","log","markTimeline","profile","profileEnd","table","time","timeEnd","timeline","timelineEnd","timeStamp","trace","warn"],r=o.length,a=window.console=window.console||{};r--;)e=o[r],a[e]||(a[e]=t)}(),"undefined"!=typeof module&&module.exports&&(module.exports=Timemap);var kickback=function(e){"use strict";function t(e){var t=[];for(var o in e)e.hasOwnProperty(o)&&t.push(encodeURIComponent(o)+"="+encodeURIComponent(e[o]));return t.join("&")}return e={},e.request=function(e){if("string"==typeof e){var o=e;e={},e.url=o,o=null}if(e.url=e.url?e.url:"/",e.data=e.data?e.data:null,e.method=e.method?e.method:"GET",e.headers=e.headers?e.headers:!1,e.cors=e.cors?e.cors:!1,e.async=e.async?e.async:!0,e.serialize=e.serialize?e.serialize:!1,e.auto=e.auto?e.auto:!1,Object.defineProperty(e,"tmp",{configurable:!0,writable:!0}),e.auto===!0)if("undefined"!=typeof window.FormData)if(e.data instanceof HTMLElement)e.data=new FormData(e.data);else{if("object"!=typeof e.data||e.data instanceof Array!=!1)throw new Error("Submit data as object or HTMLElement");e.tmp=e.data,e.data=new FormData,Object.keys(e.tmp).forEach(function(t){e.data.append(t,e.tmp[t])}),delete e.tmp}else e.data instanceof HTMLElement&&(e.tmp={},[].forEach.call(e.data,function(t){e.tmp[t.name]=t.value}),e.data=e.tmp,delete e.tmp),e.serialize=!0;return e.serialize===!0&&(e.data=t(e.data)),console.log(e.data instanceof FormData?"formDATA":"notFormData"),new Promise(function(t,o){var r=new XMLHttpRequest;r.open(e.method,e.url,e.async),r.onload=function(){200==r.status?t(r.response):o(Error("Error: ",r.statusTxt))},r.onerror=function(){o(Error("Network Error"))},e.headers!==!1&&(e.headers.type=e.headers.type||"Content-Type",e.headers.value=e.headers.value||"text/plain;charset=UTF-8",r.setRequestHeader(e.headers.type,e.headers.value)),e.headers===!1&&"post"===e.method.toLowerCase()&&e.serialize===!0&&r.setRequestHeader("Content-Type","application/x-www-form-urlencoded"),r.send("get"===e.method.toLowerCase()?null:e.data)})},e}(kickback);"undefined"!=typeof module&&module.exports&&(module.exports=kickback),function(e){"use strict";function t(){l=e.scrollY,console.log("set cache Y",l)}function o(){console.log("scrolling stopped")}var r=null,a=null,l=0,n=document.querySelector('ul[role="menubar"]'),s=document.getElementById("masthead"),c="#eaeaea",u="#AFB4D8",d="#6F94BE",i="#6EAEB3",m="#66CF97",p="#49DB45",f="#1DE410";e.onscroll=function(n){null!=r&&clearTimeout(r),null!=a&&clearTimeout(a),l<e.scrollY&&console.log("scroll down"),l>e.scrollY&&console.log("scroll up"),r=setTimeout(o,1500),a=setTimeout(t,100),0==e.scrollY&&(s.style.backgroundColor=c),e.scrollY>0&&e.scrollY<=20&&(s.style.backgroundColor=u),e.scrollY>=21&&e.scrollY<=40&&(s.style.backgroundColor=d),e.scrollY>=41&&e.scrollY<=60&&(s.style.backgroundColor=i),e.scrollY>=61&&e.scrollY<=80&&(s.style.backgroundColor=m),e.scrollY>=81&&e.scrollY<=100&&(s.style.backgroundColor=p),e.scrollY>=101&&e.scrollY<=120&&(s.style.backgroundColor=f),e.scrollY>=121&&(s.style.backgroundColor=c)},n.addEventListener("click",function(e){if(e.target&&"A"==e.target.nodeName){e.preventDefault();var t=e.target.getAttribute("href").replace("/",""),o=document.getElementById(t);o.scrollIntoView(!0)}})}(window);
//# sourceMappingURL=data:application/json;base64,